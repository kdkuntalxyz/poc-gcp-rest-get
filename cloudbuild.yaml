steps:
  - name: maven:3.3-jdk-8
    entrypoint: mvn
    args: ['package','-Dmaven.test.skip=true']
artifacts:
  mavenArtifacts:
    - repository: 'https://asia-east1-maven.pkg.dev/theta-ocean-427217-h5/poc-artifact-repo'
      path: 'https://asia-east1-maven.pkg.dev/theta-ocean-427217-h5/poc-artifact-repo'
      artifactId: 'poc-artifact-repo'
      groupId: 'com.deep.poc'
      version: '0.0.1-SNAPSHOT'




#steps:
#  # Build the container image
#  - name: 'gcr.io/cloud-builders/docker'
#    args: ['build', '-t', 'gcr.io/$PROJECT_ID/poc-gcp-rest-get-1.0.0', '.']
#  # Push the container image to Container Registry
#  - name: 'gcr.io/cloud-builders/docker'
#    args: ['push', 'gcr.io/$PROJECT_ID/poc-gcp-rest-get-1.0.0']
#  # Deploy container image to Cloud Run
#  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#    entrypoint: gcloud
#    args: ['run', 'deploy', 'SERVICE_NAME', '--image', 'gcr.io/$PROJECT_ID/poc-gcp-rest-get-1.0.0', '--region', 'asia-east1']
#images:
#  - gcr.io/$PROJECT_ID/poc-gcp-rest-get-1.0.0
#options:
#  logging: CLOUD_LOGGING_ONLY


#steps:
#  # Build the container image
#  - name: 'gcr.io/cloud-builders/docker'
#    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/poc-gcp-rest-get:$COMMIT_SHA', '.' ]
#  # Push the container image to Container Registry
#  - name: 'gcr.io/cloud-builders/docker'
#    args: [ 'push', 'gcr.io/$PROJECT_ID/poc-gcp-rest-get:$COMMIT_SHA' ]
#  # Deploy container image to Cloud Run
#  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#    entrypoint: gcloud
#    args:
#      - 'run'
#      - 'deploy'
#      - 'poc-gcp-rest-get'
#      - '--image'
#      - 'gcr.io/$PROJECT_ID/poc-gcp-rest-get:$COMMIT_SHA'
#      - '--region'
#      - 'asia-east1'
#images:
#  - 'gcr.io/$PROJECT_ID/poc-gcp-rest-get:$COMMIT_SHA'
#options:
#  logging: CLOUD_LOGGING_ONLY

#steps:
#  - name: 'gcr.io/cloud-builders/mvn'
#    args: [ 'install' ]
#  - name: 'gcr.io/cloud-builders/docker'
#    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/poc-gcp-rest-get', '.' ]
#  - name: 'gcr.io/cloud-builders/docker'
#    args: [ 'push', 'gcr.io/$PROJECT_ID/poc-gcp-rest-get' ]
#images: [ 'gcr.io/$PROJECT_ID/poc-gcp-rest-get' ]
#options:
#  logging: CLOUD_LOGGING_ONLY

#steps:
#  - name: 'gcr.io/cloud-builders/mvn'
#    args: [ 'install' ]
#  # Build the container image
#  - name: 'gcr.io/cloud-builders/docker'
#    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/poc-gcp-rest-get', '.' ]
#  # Push the container image to Container Registry
#  - name: 'gcr.io/cloud-builders/docker'
#    args: [ 'push', 'gcr.io/$PROJECT_ID/poc-gcp-rest-get' ]
#  # Deploy container image to Cloud Run
#  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
#    entrypoint: gcloud
#    args:
#      - 'run'
#      - 'deploy'
#      - 'SERVICE_NAME'
#      - '--image'
#      - 'gcr.io/$PROJECT_ID/poc-gcp-rest-get'
#      - '--region'
#      - 'asia-east1'
#images:
#  - 'gcr.io/$PROJECT_ID/poc-gcp-rest-get'
#options:
#  logging: CLOUD_LOGGING_ONLY

#steps:
#  - name: 'gcr.io/cloud-builders/mvn'
#    args: ['install']
#  - name: 'gcr.io/cloud-builders/docker'
#    args: [ 'build', '-t', 'asia-east1-docker.pkg.dev/$PROJECT_ID/${_SERVICE_NAME}', '.' ]
#images: ['gcr.io/$PROJECT_ID/poc-gcp-rest-get']
#options:
#  logging: CLOUD_LOGGING_ONLY
